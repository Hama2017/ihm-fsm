{
  "common": {
    "save": "Save",
    "cancel": "Cancel",
    "confirm": "Confirm",
    "edit": "Edit",
    "delete": "Delete",
    "create": "Create",
    "deploy": "Deploy",
    "back": "Back",
    "add": "Add",
    "loading": "Loading...",
    "yes": "Yes",
    "no": "No",
    "search": "Search",
    "filter": "Filter",
    "sort": "Sort",
    "actions": "Actions",
    "status": "Status",
    "details": "Details",
    "name": "Name",
    "description": "Description",
    "date": "Date",
    "close": "Close",
    "submit": "Submit",
    "retry": "Retry",
    "next": "Next",
    "previous": "Previous",
    "first": "First",
    "last": "Last",
    "upload": "Upload",
    "download": "Download",
    "import": "Import",
    "export": "Export",
    "refresh": "Refresh",
    "success": "Success",
    "error": "Error",
    "warning": "Warning",
    "info": "Information"
  },
  "errors": {
    "general": {
      "not_found": "Resource not found",
      "bad_request": "Invalid request",
      "internal_error": "An internal error occurred",
      "validation_failed": "Validation failed",
      "unauthorized": "Unauthorized",
      "forbidden": "Access forbidden",
      "conflict": "Resource conflict",
      "get_failed": "Failed to retrieve data",
      "post_failed": "Failed to create",
      "update_failed": "Failed to update",
      "delete_failed": "Failed to delete",
      "network_error": "Network error - Check your connection",
      "service_unavailable": "Service unavailable",
      "timeout": "The request took too long",
      "unknown_error": "An unknown error occurred",
      "form_validation": "Please correct the errors in the form",
      "required_field": "This field is required",
      "invalid_format": "Invalid format",
      "server_error": "Server error",
      "client_error": "Client error",
      "no_response": "No response from server"
    },
    "auth": {
      "email_already_used": "This email is already in use",
      "invalid_credentials": "Invalid email or password",
      "user_not_found": "User not found",
      "incorrect_current_password": "Current password is incorrect",
      "password_update_failed": "Password update failed",
      "insufficient_permissions": "Insufficient permissions",
      "missing_token": "Authentication token is missing",
      "invalid_token": "Invalid or expired token",
      "missing_tokens": "Authentication tokens are missing",
      "invalid_token_payload": "Invalid token data",
      "invalid_refresh_token": "Invalid refresh token",
      "refresh_token_expired": "Refresh token has expired",
      "invalid_file_format": "Invalid file format",
      "file_too_large": "File is too large",
      "profile_picture_deletion_failed": "Failed to delete profile picture",
      "login_failed": "Login failed",
      "logout_failed": "Logout failed",
      "register_failed": "Registration failed",
      "account_locked": "Account locked",
      "too_many_attempts": "Too many attempts, please try again later",
      "password_too_weak": "Password too weak",
      "session_expired": "Your session has expired, please log in again"
    },
    "apikey": {
      "not_found": "API key not found",
      "already_exists": "This API key already exists",
      "invalid": "Invalid API key",
      "unauthorized": "Unauthorized access",
      "missing_header": "API key header is missing",
      "disabled": "This API key is disabled",
      "expired": "This API key has expired",
      "exceeded_limit": "API key usage limit exceeded",
      "creation_failed": "Failed to create API key",
      "update_failed": "Failed to update API key",
      "deletion_failed": "Failed to delete API key"
    },
    "contract": {
      "not_found": "Contract not found",
      "already_exists": "This contract already exists",
      "validation_failed": "Contract validation failed",
      "deployment_failed": "Contract deployment failed",
      "execution_failed": "Contract execution failed",
      "unauthorized_access": "Unauthorized contract access",
      "invalid_state": "Invalid contract state",
      "compilation_failed": "Contract compilation failed",
      "missing_automaton": "Missing automaton",
      "invalid_transition": "Invalid transition",
      "invalid_parameter": "Invalid parameter",
      "cannot_execute": "Cannot execute this function in the current state",
      "gas_estimation_failed": "Gas estimation failed",
      "transaction_failed": "Transaction failed",
      "blockchain_error": "Blockchain error",
      "contract_creation_failed": "Failed to create contract",
      "contract_update_failed": "Failed to update contract",
      "contract_deletion_failed": "Failed to delete contract"
    },
    "automaton": {
      "not_found": "Automaton not found",
      "already_exists": "This automaton already exists",
      "invalid_structure": "Invalid automaton structure",
      "state_not_found": "State not found",
      "transition_not_found": "Transition not found",
      "cyclic_dependency": "Cyclic dependency detected",
      "invalid_initial_state": "Invalid initial state",
      "invalid_final_state": "Invalid final state",
      "missing_transition": "Missing transition",
      "missing_state": "Missing state",
      "validation_failed": "Automaton validation failed",
      "duplicate_transition": "Duplicate transition",
      "unreachable_state": "Unreachable state",
      "dead_end_state": "Dead-end state",
      "missing_conditions": "Missing conditions",
      "condition_evaluation_failed": "Condition evaluation failed"
    },
    "package": {
      "not_found": "Package not found",
      "already_exists": "This package already exists",
      "invalid_structure": "Invalid package structure",
      "missing_function": "Missing function",
      "dependency_not_found": "Dependency not found",
      "validation_failed": "Package validation failed",
      "installation_failed": "Package installation failed",
      "duplicate_function": "Duplicate function",
      "duplicate_variable": "Duplicate variable",
      "duplicate_struct": "Duplicate struct",
      "import_failed": "Package import failed",
      "export_failed": "Package export failed",
      "incompatible_version": "Incompatible version",
      "invalid_format": "Invalid package format",
      "syntax_error": "Syntax error in package code",
      "compilation_error": "Package compilation error"
    },
    "form": {
      "required": "This field is required",
      "email": "Please enter a valid email address",
      "min_length": "This field must be at least {min} characters",
      "max_length": "This field cannot exceed {max} characters",
      "password_match": "Passwords do not match",
      "number": "This field must be a number",
      "url": "Please enter a valid URL",
      "date": "Please enter a valid date",
      "alpha": "This field can only contain letters",
      "alphanumeric": "This field can only contain letters and numbers"
    }
  },
  "contract": {
    "name": "Contract name",
    "status": {
      "draft": "Draft",
      "deployed": "Deployed",
      "active": "Active"
    },
    "noAutomate": "No automaton",
    "automateCount": "{count} automaton | {count} automatons",
    "createdAt": "Created at",
    "updatedAt": "Updated at",
    "confirmUpdate": "Update existing contract?",
    "confirmUpdateMessage": "A contract named \"{name}\" already exists. Do you want to update this existing contract?",
    "createSuccess": "Contract created successfully",
    "updateSuccess": "Contract updated successfully",
    "deleteSuccess": "Contract deleted successfully",
    "deploySuccess": "Contract deployed successfully",
    "execution": {
      "title": "Function execution",
      "select_function": "Select a function",
      "args": "Arguments",
      "execute": "Execute",
      "result": "Result",
      "success": "Function executed successfully",
      "state_changed": "Contract state has changed"
    }
  },
  "automate": {
    "name": "Clause name",
    "addState": "Add state",
    "editState": "Edit state",
    "removeState": "Remove state",
    "confirmDeleteState": "Are you sure you want to delete this state?",
    "stateType": {
      "initial": "Initial state",
      "standard": "Standard state",
      "final": "Final state"
    },
    "createSuccess": "Clause created successfully",
    "updateSuccess": "Clause updated successfully",
    "deleteSuccess": "Clause deleted successfully"
  },
  "transition": {
    "name": "Trigger",
    "addTransition": "Add transition",
    "editTransition": "Edit transition",
    "removeTransition": "Remove transition",
    "invertTransition": "Invert transition",
    "confirmDeleteTransition": "Are you sure you want to delete this transition?",
    "source": "Source state",
    "target": "Target state",
    "function": "Function",
    "conditions": "Conditions",
    "dependencies": "Dependencies",
    "createSuccess": "Transition created successfully",
    "updateSuccess": "Transition updated successfully",
    "deleteSuccess": "Transition deleted successfully"
  },
  "success": {
    "contractCreated": "Contract created successfully!",
    "contractUpdated": "Contract updated successfully!",
    "automateCreated": "Clause created successfully!",
    "automateUpdated": "Clause updated successfully!",
    "stateAdded": "State added successfully!",
    "stateUpdated": "State updated successfully!",
    "stateRemoved": "State removed successfully!",
    "transitionAdded": "Transition added successfully!",
    "transitionUpdated": "Transition updated successfully!",
    "transitionRemoved": "Transition removed successfully!",
    "deployed": "Contract deployed successfully!"
  },
  "deployment": {
    "title": "Contract deployment",
    "preparing": "Preparing deployment...",
    "launching": "Launching deployment...",
    "deploying": "Deploying smart contracts...",
    "complete": "Deployment completed successfully!",
    "orderTitle": "Clause deployment order:",
    "simulationSuccess": "Deployment simulation completed successfully!",
    "simulationHelp": "This simulation shows the order in which the clauses will be deployed based on their dependencies.",
    "deploySuccess": "Contract successfully deployed on the blockchain!",
    "deployHelp": "Your smart contract has been correctly deployed on the blockchain and is now ready to be used.",
    "interact": "Interact with the contract"
  },
  "auth": {
    "login": {
      "title": "Login",
      "email": "Email",
      "password": "Password",
      "submit": "Log in",
      "forgot_password": "Forgot password?",
      "no_account": "Don't have an account yet?",
      "register": "Register",
      "remember_me": "Remember me",
      "success": "Login successful"
    },
    "register": {
      "title": "Register",
      "first_name": "First name",
      "last_name": "Last name",
      "email": "Email",
      "password": "Password",
      "confirm_password": "Confirm password",
      "submit": "Register",
      "have_account": "Already have an account?",
      "login": "Log in",
      "success": "Registration successful",
      "terms": "I agree to the terms of service"
    },
    "logout": {
      "success": "Logout successful",
      "confirm": "Are you sure you want to log out?"
    },
    "profile": {
      "title": "Profile",
      "update_success": "Profile updated successfully",
      "password_change_success": "Password changed successfully"
    }
  },
  "apiKeys": {
    "title": "API Keys",
    "create": "Create API key",
    "view": "View API key",
    "edit": "Edit API key",
    "delete": "Delete API key",
    "app_name": "Application name",
    "created_at": "Created at",
    "status": {
      "active": "Active",
      "inactive": "Inactive"
    },
    "copy": "Copy key",
    "usage_count": "Usage count",
    "usage_limit": "Usage limit",
    "confirmDelete": "Are you sure you want to delete this API key?",
    "createSuccess": "API key created successfully",
    "updateSuccess": "API key updated successfully",
    "deleteSuccess": "API key deleted successfully",
    "copied": "API key copied to clipboard"
  },
  "packages": {
    "title": "Packages",
    "create": "Create package",
    "edit": "Edit package",
    "delete": "Delete package",
    "import": "Import package",
    "export": "Export package",
    "confirmDelete": "Are you sure you want to delete this package?",
    "createSuccess": "Package created successfully",
    "updateSuccess": "Package updated successfully",
    "deleteSuccess": "Package deleted successfully",
    "importSuccess": "Package imported successfully",
    "exportSuccess": "Package exported successfully",
    "function": {
      "add": "Add function",
      "edit": "Edit function",
      "delete": "Delete function",
      "name": "Function name",
      "code": "Code",
      "default": "Default",
      "description": "Description"
    },
    "struct": {
      "add": "Add struct",
      "edit": "Edit struct",
      "delete": "Delete struct",
      "name": "Struct name",
      "code": "Code"
    },
    "variable": {
      "add": "Add variable",
      "edit": "Edit variable",
      "delete": "Delete variable",
      "name": "Variable name",
      "code": "Code"
    }
  }
}