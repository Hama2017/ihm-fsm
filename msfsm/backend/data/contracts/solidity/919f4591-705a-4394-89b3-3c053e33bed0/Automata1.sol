pragma solidity ^0.8.0;contract Automata1 {enum State {A,B,C,COMPLETED}State currentState = State.A;function package__p2__c2() public pure returns (bool) { return true; }function package__p1__c1() public pure returns (bool) { return true; }function automata__Automata0__is_completed() public view returns (bool) {(bool success, bytes memory data) = address(0x82e01223d51Eb87e16A03E24687EDF0F294da6f1).staticcall(abi.encodeWithSignature("is_completed()"));require(success, "staticcall to is_completed failed");return abi.decode(data, (bool));}function valider() public {require(currentState == State.A||currentState == State.C);bool transitionExecuted = false;if (package__p1__c1() && package__p2__c2() && currentState == State.A) {currentState = State.C;transitionExecuted = true;}else if (automata__Automata0__is_completed() && currentState == State.C) {currentState = State.B;transitionExecuted = true;}require(transitionExecuted, "No valid transition conditions met");}function get_current_state() public view returns (uint) { return uint(currentState); }function is_completed() public view returns (bool) { return currentState == State.COMPLETED; }function to_completed() public { currentState = State.COMPLETED; }}